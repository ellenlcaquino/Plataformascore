====================================================================
PATCH PARA RESOLVER ERRO DE CACHE DO SUPABASE
====================================================================

ARQUIVO: /supabase/functions/server/index.tsx
LINHAS: 1041-1157

BUSQUE POR:
```
// Save assessment
app.post("/make-server-2b631963/assessments", async (c) => {
```

SUBSTITUA TODO O ENDPOINT (at√© o fecha chaves `});`) POR:

====================================================================

// Save assessment (BYPASS verifica√ß√£o de usu√°rio - fix cache Supabase)
app.post("/make-server-2b631963/assessments", async (c) => {
  try {
    const body = await c.req.json();
    
    console.log('üíæ [BYPASS] Salvando avalia√ß√£o:', {
      user_id: body.user_id,
      rodada_id: body.rodada_id,
      totalAnswers: body.answers ? Object.keys(body.answers).length : 0
    });

    // BYPASS: N√£o verificar se usu√°rio existe (resolve cache do Supabase)
    console.log('‚ö° BYPASS: Pulando verifica√ß√£o de usu√°rio para resolver cache');
    
    // Criar assessment diretamente
    const { data: assessment, error: assessmentError } = await supabase
      .from('assessments')
      .insert({
        user_id: body.user_id,
        rodada_id: body.rodada_id,
        company_id: body.company_id,
        versao_id: body.versao_id,
        overall_score: body.overall_score || 0,
        status: body.status || 'draft',
        completed_at: body.status === 'completed' ? new Date().toISOString() : null
      })
      .select()
      .single();

    if (assessmentError) {
      console.error('‚ùå Erro ao criar assessment:', assessmentError);
      return c.json({ 
        error: 'Erro ao salvar assessment',
        details: assessmentError.message,
        code: assessmentError.code
      }, 500);
    }

    console.log('‚úÖ Assessment criado:', assessment.id);

    // Salvar respostas
    if (body.answers && Object.keys(body.answers).length > 0) {
      const answers = Object.entries(body.answers).map(([questionId, value]) => ({
        assessment_id: assessment.id,
        question_id: questionId,
        pilar_id: getPilarIdFromQuestionId(questionId),
        value: Number(value)
      }));

      console.log(`üíæ Salvando ${answers.length} respostas...`);

      const { error: answersError } = await supabase
        .from('assessment_answers')
        .insert(answers);

      if (answersError) {
        console.error('‚ùå Erro ao salvar respostas:', answersError);
      } else {
        console.log(`‚úÖ ${answers.length} respostas salvas!`);
      }
    }

    console.log('üéâ Assessment salvo com sucesso!');
    return c.json({ assessment });
  } catch (error: any) {
    console.error('‚ùå Erro:', error);
    return c.json({ 
      error: error.message || 'Erro ao salvar',
      details: error.toString()
    }, 500);
  }
});

====================================================================
FIM DO PATCH
====================================================================

IMPORTANTE:
- Remova TODA a verifica√ß√£o de usu√°rio (linhas 1056-1101)
- Isso resolve o erro de cache "Could not find the table 'public.users' in the schema cache"
- O assessment ser√° salvo diretamente sem verificar se o usu√°rio existe primeiro
